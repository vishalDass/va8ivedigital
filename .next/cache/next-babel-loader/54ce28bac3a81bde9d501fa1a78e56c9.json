{"ast":null,"code":"var _jsxFileName = \"F:\\\\newtemplate\\\\pages\\\\restaurantByCollection.jsx\";\nvar __jsx = React.createElement;\nimport react from \"react\";\nimport SideNav, { MenuIcon } from \"react-simple-sidenav\";\nimport React, { Component } from \"react\";\nimport { useRouter } from \"next/router\";\n\nconst renderRestaurantInfo = props => {\n  console.log(\"TRAILS\", props.result.restaurants[0].restaurant);\n  let style = {\n    width: \"300px\",\n    height: \"300px\",\n    margin: \"10px 10px 10px 10px\",\n    backgroundColor: \"white\"\n  };\n  const restaurants = props.result.restaurants.map(t => {\n    return __jsx(\"div\", {\n      className: \"card\",\n      style: {\n        width: 30 + \"rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"card-img-top\",\n      src: t.restaurant.featured_image,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, t.restaurant.name), __jsx(\"h4\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, t.timings, \" \"), __jsx(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Cusines: \", t.cuisines), __jsx(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"currency: \", t.currency, \" miles\"), __jsx(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"has_online_delivery \", t.has_online_delivery, \" ft, Descent:\", \" \", t.has_online_delivery, \" ft\"), __jsx(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"price_range: \", t.price_range, \", \", t.price_range, \" \"))));\n  });\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(SideNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      margin: \"10px 10px 10px 10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, restaurants));\n};\n\nrenderRestaurantInfo.getInitialProps = async function ({\n  query\n}) {\n  const url = `https://developers.zomato.com/api/v2.1/search?collection_id=${query.cid}`;\n  const res = await fetch(url, {\n    headers: {\n      \"user-key\": \"477646bb6cbda47c85e1f1fb90afb556\",\n      Accept: \"application/json\"\n    }\n  });\n  const result = await res.json();\n  console.log(\"result\", result);\n  return {\n    result\n  };\n};\n\nexport default renderRestaurantInfo;","map":{"version":3,"sources":["F:/newtemplate/pages/restaurantByCollection.jsx"],"names":["react","SideNav","MenuIcon","React","Component","useRouter","renderRestaurantInfo","props","console","log","result","restaurants","restaurant","style","width","height","margin","backgroundColor","map","t","featured_image","name","timings","cuisines","currency","has_online_delivery","price_range","getInitialProps","query","url","cid","res","fetch","headers","Accept","json"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport SideNav, { MenuIcon } from \"react-simple-sidenav\";\r\nimport React, { Component } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst renderRestaurantInfo = props => {\r\n  console.log(\"TRAILS\", props.result.restaurants[0].restaurant);\r\n  let style = {\r\n    width: \"300px\",\r\n    height: \"300px\",\r\n    margin: \"10px 10px 10px 10px\",\r\n    backgroundColor: \"white\"\r\n  };\r\n\r\n  const restaurants = props.result.restaurants.map(t => {\r\n    return (\r\n      <div className=\"card\" style={{ width: 30 + \"rem\" }}>\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={t.restaurant.featured_image}\r\n          style={style}\r\n        />\r\n\r\n        <div className=\"card-body\">\r\n          <h1 className=\"card-title\">{t.restaurant.name}</h1>\r\n          {/* <h2 className=\"card-text\">{t.location.address} </h2> */}\r\n          <h4 className=\"card-text\">{t.timings} </h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">Cusines: {t.cuisines}</li>\r\n            <li className=\"list-group-item\">currency: {t.currency} miles</li>\r\n            <li className=\"list-group-item\">\r\n              has_online_delivery {t.has_online_delivery} ft, Descent:{\" \"}\r\n              {t.has_online_delivery} ft\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              price_range: {t.price_range}, {t.price_range}{\" \"}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SideNav />\r\n      <div className=\"row\" style={{ margin: \"10px 10px 10px 10px\" }}>\r\n        {restaurants}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nrenderRestaurantInfo.getInitialProps = async function({ query }) {\r\n  const url = `https://developers.zomato.com/api/v2.1/search?collection_id=${query.cid}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      \"user-key\": \"477646bb6cbda47c85e1f1fb90afb556\",\r\n      Accept: \"application/json\"\r\n    }\r\n  });\r\n\r\n  const result = await res.json();\r\n  console.log(\"result\", result);\r\n  return { result };\r\n};\r\n\r\nexport default renderRestaurantInfo;\r\n"]},"metadata":{},"sourceType":"module"}